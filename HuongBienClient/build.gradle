plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'java'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'java.huongbien'
    mainClass = 'java.huongbien.HelloApplication'
}

javafx {
    version = '17.0.6'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.swing' , 'javafx.media']
}

dependencies {
    //  Entities and DAO Interfaces dependencies
    implementation(files('libs/HuongBienServer-1.0-SNAPSHOT.jar'))

    //  OpenCV dependencies
    implementation(files('libs/native/opencv_java451.dll'))
    implementation("org.openpnp:opencv:4.5.1-2")
    //  QRCode
    implementation("com.google.zxing:javase:3.3.1")
    //  JavaFX dependencies
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.8.0'
    implementation('org.controlsfx:controlsfx:11.2.1')
    implementation('com.dlsc.formsfx:formsfx-core:11.6.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
    implementation('eu.hansolo:tilesfx:21.0.3') {
        exclude(group: 'org.openjfx')
    }
    implementation('com.github.almasb:fxgl:17.3') {
        exclude(group: 'org.openjfx')
        exclude(group: 'org.jetbrains.kotlin')
    }

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'

    // Environment config
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'

    // JSON processing
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.4'

    // Hibernate ORM (for enum in entity ¯\_(ツ)_/¯)
    implementation 'org.hibernate:hibernate-core:6.2.7.Final'
    implementation 'org.hibernate.orm:hibernate-jpamodelgen:6.2.7.Final'
    implementation 'com.h2database:h2:2.1.214'

    // Email
    implementation 'com.sun.mail:javax.mail:1.5.5'

    // JUnit 5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

// Set up the native library path for running
run {
    systemProperty "java.library.path", "${projectDir}/libs/native"
}

// Copy native libraries to the build directory for distribution
task copyNativeLibs(type: Copy) {
    from "${projectDir}/libs/native"
    into "${buildDir}/libs"
}

tasks.withType(JavaExec) {
    dependsOn copyNativeLibs
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}